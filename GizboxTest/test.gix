import <"core">  
import <"stdlib">  

using Core;  
using Console;
using Collections;

GC::Disable();

namespace Creature
{
    int totalCount = 0;

    Creature Born(string type)
    {
        if(type == "Human")
        {
            Console::Log("Create Human...");
            Human inst = new Human();
            Creature::totalCount ++;
            return (Creature)inst;  
        }
        else
        {
            return null;
        }
    }
    void Die(Creature c)
    {
        if(c != null)
        {
            Console::Log("Delete Creature:" + c.name);
            delete c;
            Creature::totalCount --;
        }
    }
}
class Creature
{    
    string name = "";
    int age = 0;

    void Move()
    {
        Console::Log(this.name + " move...");
    }
}
namespace Human::Job
{
    const int Undefined = 0;
    const int Student = 2;
    const int Teacher = 4;
    const int Engineer = 8;
    const int Cook = 16;
}
class Human : Creature
{
    int job = 0;
    
    void Move()
    {
        Console::Log(this.name + " walk...");
    }
}

//Test  
Human sam = (Human)Creature::Born("Human");
sam.name = "Sam";
sam.age = 20;
sam.job = Human::Job::Student;

sam.Move();

for(int i = 0; i < 99; i++)
{
    sam.age += 1;

    if((sam.age % 10) == 0)
    {
        Console::Log(sam.name + " is now " + (string)(sam.age) + " years old!");
    }

    if(sam.age > 90)
    {
        Creature::Die(sam);
        break;
    }
}


Human[] GetHumans()
{
    Human[] humans = new Human[1];
    humans[0] = new Human();
    humans[0].name = "aaa";
    return humans;
}

Human[] allHumans = GetHumans();
Human first = allHumans[0];
Console::Log("First..." + first.name);


Console::Log("Test Finish...");
